apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: instana
  namespace: instana-datastores
spec:
  version: 8.18.3
  image: artifact-public.instana.io/self-hosted-images/3rd-party/datastore/elasticsearch:8.18.3_v0.16.5
  # version: 8.17.6
  # image: artifact-public.instana.io/self-hosted-images/3rd-party/datastore/elasticsearch:8.17.6_v0.16.3
  # version: 7.17.27
  # image: artifact-public.instana.io/self-hosted-images/3rd-party/datastore/elasticsearch:7.17.27_v0.10.1
  # version: 7.17.20
  # image: artifact-public.instana.io/self-hosted-images/3rd-party/datastore/elasticsearch:7.17.20_v0.9.0
  # version: 8.15.3
  # image: artifact-public.instana.io/self-hosted-images/3rd-party/datastore/elasticsearch:8.15.3_v0.12.0
  nodeSets:
    - name: default
      count: {{current_feature.instana_backend_scale  | default(3)}}
      config:
        node.roles:
          - master
          - data
          - ingest
        node.store.allow_mmap: false
        xpack.security.authc:
          anonymous:
            username: anonymous
            roles: superuser
            authz_exception: false
      podTemplate:
        spec:
          imagePullSecrets:
            - name: instana-registry
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: 4Gi
                  cpu: 1
                limits:
                  memory: 4Gi
                  cpu: 2
          serviceAccount: elastic-operator
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
          spec:
            storageClassName: {{ STORAGE_CLASS_LARGE_BLOCK }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
  http:
    tls:
      selfSignedCertificate:
        disabled: true


