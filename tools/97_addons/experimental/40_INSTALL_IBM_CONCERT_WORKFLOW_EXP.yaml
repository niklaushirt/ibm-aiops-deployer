#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#     ________  __  ___   __________    ___         __                        __  _
#    /  _/ __ )/  |/  /  /  _/_  __/   /   | __  __/ /_____  ____ ___  ____ _/ /_(_)___  ____
#    / // __  / /|_/ /   / /  / /     / /| |/ / / / __/ __ \/ __ `__ \/ __ `/ __/ / __ \/ __ \
#  _/ // /_/ / /  / /  _/ /  / /     / ___ / /_/ / /_/ /_/ / / / / / / /_/ / /_/ / /_/ / / / /
# /___/_____/_/  /_/  /___/ /_/     /_/  |_\__,_/\__/\____/_/ /_/ /_/\__,_/\__/_/\____/_/ /_/
#
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------"
#  Installing IBM Rapid Infrastructure Automation / Concert Workflow
#
#  IBM Concert
#
#  ¬©2025 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Get a Cluster from TechZone: https://techzone.ibm.com/collection/tech-zone-certified-base-images/journey-base-open-shift
#   Type:               OpenShift Cluster (OCP-V) - IBM Cloud
#   Worker node count:  3
#   Flavour:            16x64 ‚ùó 
#   OpenShift Version:  4.18
#   Storage:            300GB ephemeral storage
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Installs:
#
#  - IBM Concert Workflow Standalone 
#  - NO INTEGRATION YET - see https://www.ibm.com/docs/en/concert?topic=workflows-installing-concert-ocp
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
---
apiVersion: v1                     
kind: Namespace
metadata:
  name: ibm-installer
---
apiVersion: operator.openshift.io/v1alpha1
kind: ImageContentSourcePolicy
metadata:
  name: ibm-aiops-rc
spec:
  repositoryDigestMirrors:
    - mirrors:
        - cp.stg.icr.io/cp
      source: cp.icr.io/cp
    - mirrors:
        - cp.stg.icr.io/cp
      source: icr.io/cpopen
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ibm-installer-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ibm-installer
---    
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubecost-cost-analyzer-admin
subjects:
  - kind: ServiceAccount
    name: kubecost-cost-analyzer
    namespace: kubecost
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ibm-aiops-install-ria-standalone
  namespace: ibm-installer
  labels:
   aiops-type: data-load-job
spec:
  serviceAccount: ibm-installer-admin
  template:
    spec:
      containers:
        - name: install
          image: quay.io/niklaushirt/ibm-aiops-tools:2.3
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "2024Mi"
              cpu: "1200m"
          command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              #set -x

              echo "*****************************************************************************************************************************"
              echo " ‚ùó THIS IS HIGHLY EXPERIMENTAL ‚ùó"
              echo ""
              echo " ‚ùó FULLY STANDALONE - NO INTEGRATION WITH CONCERT YET ‚ùó"
              echo "*****************************************************************************************************************************"

              OPENSHIFT_ROUTE=$(oc get route -n openshift-console console -o jsonpath={.spec.host})    
              INSTALL_POD=$(oc get po -n ibm-installer --no-headers|grep "Running"|grep "1/1"|grep 'ria-standalone'|awk '{print$1}')

              cat <<EOF | oc apply -f -
              apiVersion: console.openshift.io/v1
              kind: ConsoleNotification
              metadata:
                name: ibm-aiops-notification-ria
              spec:
                backgroundColor: '#141a6b'
                color: '#fff'
                location: BannerTop
                text: 'Installing IBM Concert Workflows - Standalone '    
                link:
                    href: "https://$OPENSHIFT_ROUTE/k8s/ns/ibm-installer/pods/$INSTALL_POD/logs"
                    text: Open Logs  
              EOF


              echo "*****************************************************************************************************************************"
              echo " ‚úÖ STARTING: INSTALL RIA STANDALONE"
              echo "*****************************************************************************************************************************"
              echo ""
              echo ""
              # echo "------------------------------------------------------------------------------------------------------------------------------"
              # echo " üöÄ Getting Source from GitHub"
              # echo "------------------------------------------------------------------------------------------------------------------------------"
              # echo "   üì• Clone Repo $REPO_URL"
              # git clone $REPO_URL
              # cd ibm-aiops-tools

              # echo ""
              # echo ""
              # echo "------------------------------------------------------------------------------------------------------------------------------"
              # echo "   üîé This Repo includes those latestet Commits"
              # git log|head -n 17
              # echo ""
              # echo ""


              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " üöÄ Install Helm"

              curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
              chmod 700 get_helm.sh
              ./get_helm.sh



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " üöÄ Install RIA"

              #https://www.ibm.com/docs/en/concert?topic=workflows-installing-concert-ocp


              export INSTALL_DIR=/tmp/CONCERT_WORKFLOW
              #export RIA_NAMESPACE=ibm-concert
              export RIA_NAMESPACE=ria


              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ PREPARE"
              cd /
              rm -rf $INSTALL_DIR

              mkdir $INSTALL_DIR
              cd $INSTALL_DIR

              apt update
              apt install -y dnsutils
              apt-get install -y iputils-ping


              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Get Installation Files"
              wget https://github.com/IBM/Concert/releases/download/v1.0.5.2/ibm-concert-k8s-workflows.tgz
              tar xfz ibm-concert-k8s-workflows.tgz
              cd workflows



              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Create Workflow Assets"
              oc create namespace ${RIA_NAMESPACE}
              oc project ${RIA_NAMESPACE}

              oc create secret docker-registry ibm-entitlement-key \
              --docker-server=cp.icr.io \
              --docker-username=cp \
              --docker-password=$ENTITLED_REGISTRY_KEY \
              --namespace="${RIA_NAMESPACE}"


              ./bin/prerequisites.sh rna-core install

              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Create Concert Portal HUB Gateway"
              oc create route passthrough --insecure-policy="Redirect" portal -n ibm-concert --service=ibm-roja-portal-gw-svc --port=12443



              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Get Concert Infos"
              API_URL=$(oc status|grep -m1 "In project"|awk '{print$6}')
              API_SERVER=$(echo $API_URL| cut -d ":" -f 2| tr -d '/')
              API_PORT=$(echo $API_URL| cut -d ":" -f 3)
              #export CONCERT_HUB_HOST=$(oc get route -n ibm-concert concert -o jsonpath={.spec.host})
              export HOST=$(oc get route -n openshift-console console -o jsonpath={.spec.host})
              export API_URL="https://"${HOST/console-openshift-console.apps./}
              export SERVER_IP=$(nslookup $HOST 8.8.8.8| awk '/^Address: / { print $2 }')

              export SERVER_ADDR="https://"$SERVER_IP
              export CONCERT_HUB_ROUTE="https://"$CONCERT_HUB_HOST


              #export SERVER_ADDR="https://ria-ria.apps.itz-9x9eg9.osv.techzone.ibm.com"

              echo "  SERVER_IP:           $SERVER_IP"
              echo "  SERVER_ADDR:         $SERVER_ADDR"
              echo "  API_URL:             $API_URL"


              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Create Config File"
              rm ./bin/my-concert-workflows-values_standalone.yaml

              cat > ./bin/my-concert-workflows-values_standalone.yaml <<EOF
              imageRegistry: "cp.icr.io/cp/concert"
              imagePullSecretName: ibm-entitlement-key
              rna:
                instance:
                  admin_password: "P4ssw0rd!"
                  address: "$SERVER_ADDR"
                  installation_mode: standalone
                faas:
                  faas_namespace: "faas"
                  python:
                    pip_registry: "https://pypi.org/pypi"
                    pip_ignore_ssl_errors: true
              EOF

              cat ./bin/my-concert-workflows-values_standalone.yaml

              oc create route passthrough --insecure-policy="Redirect" ria -n $RIA_NAMESPACE --service=pliant-proxy --port=https


              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Install Concert Workflow"
              oc project $RIA_NAMESPACE
              export VALUES_YAML_FILE=./my-concert-workflows-values_standalone.yaml
              ./bin/deploy-k8s --namespace="${RIA_NAMESPACE}"


              # oc create route passthrough --insecure-policy="Redirect" front -n $RIA_NAMESPACE --service=pliant-front --port=8000
              # oc create route passthrough --insecure-policy="Redirect" portal -n $RIA_NAMESPACE --service=pliant-front --port=8000
              # oc create route passthrough --insecure-policy="Redirect" ria -n $RIA_NAMESPACE --service=pliant-proxy --port=443


              export RIA_NAMESPACE=ria

              echo "-------------------------------------------------------------------------------------------------"
              echo "üöÄ Get Credentials"
              export RIA_USR=$(oc get secret rna-core-pliant-secrets -n $RIA_NAMESPACE -o jsonpath='{.data.admin-user}' | base64 --decode)
              export RIA_PWD=$(oc get secret rna-core-pliant-secrets -n $RIA_NAMESPACE -o jsonpath='{.data.admin-password}' | base64 --decode)
              export RIA_URL=$(oc get route ria -n $RIA_NAMESPACE  -o jsonpath={.spec.host})
              echo "  RIA_REST_USR: $RIA_USR"
              echo "  RIA_REST_PWD: $RIA_PWD"
              echo "  RIA_URL:      $RIA_URL"

              cat <<EOF | oc apply -f -
              apiVersion: console.openshift.io/v1
              kind: ConsoleNotification
              metadata:
                  name: ibm-aiops-notification-ria
              spec:
                  backgroundColor: '#009a00'
                  color: '#fff'
                  link:
                      href: "https://$RIA_URL"
                      text: RIA
                  location: BannerTop
                  text: "‚úÖ IBM RIA is installed in this cluster. üöÄ Access it here with $RIA_USR/$RIA_PWD :"
              EOF




              echo "*****************************************************************************************************************************"
              echo " üõ†Ô∏è TO REMOVE"
              echo "oc delete ns ria &"
              echo "helm list -A -a "
              echo "helm delete rna-core"
              echo "oc delete job -n ibm-installer ibm-aiops-install-ria-standalone"

              echo "*****************************************************************************************************************************"
              echo ""
              echo ""
              echo ""
              echo ""


              echo "*****************************************************************************************************************************"
              echo " ‚úÖ DONE"
              echo "*****************************************************************************************************************************"

              while true
              do
                sleep 1000
              done
              echo "*****************************************************************************************************************************"

          env:
          - name: ENTITLED_REGISTRY_KEY
            value :  <REGISTRY_TOKEN>
      restartPolicy: Never
  backoffLimit: 4
